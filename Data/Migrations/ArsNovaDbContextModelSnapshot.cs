// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ArsNovaDbContext))]
    partial class ArsNovaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResumeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ResumeId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed posuere nisl tristique purus volutpat sagittis. Cras suscipit placerat varius. Aenean fermentum metus ut iaculis ultrices. Nullam semper sollicitudin faucibus. Nam vel bibendum justo. Cras mollis ex odio, at iaculis nunc iaculis eget. Nullam volutpat bibendum tincidunt. Vestibulum aliquam risus quis hendrerit tempor. Suspendisse ut ex in arcu convallis gravida. In venenatis feugiat posuere. Duis ac aliquam odio. Vestibulum sit amet volutpat erat, in elementum tortor. Phasellus malesuada ipsum id velit viverra elementum. Nulla eleifend sem sed nunc facilisis venenatis. Cras pellentesque quam sit amet urna convallis scelerisque.",
                            Email = "picasso-pablo@xxx.com",
                            ImgSrc = "https://lh3.googleusercontent.com/TmD9WKyVaYAeahGuyOu4Dri9G6bPGBCX1cECtvv1Re9Wwkq-I9dFravaTqvqowg0XFQ6o2gFoZBRMfGbqmiD9HUAajcSnw1r1ZPuB86roSZ-bJUzJIe7he3S8fonHXrlqgBHG1dT-B75hYxouqAO0OQ8K8rpSAtU4_0aR31nMvilf5-OYPQAWYdk0HQ7prFez5BJAQqQfQ_2OETZZTlnSrl69178R1hnx4h5F0izDxCq9-BXneYjz0Epa6fU1b7FcuZEvUQgmXzlm3mfywn6O2DfsFijw4aQZ0gzc4JXO5dfx7lKA-ncb69MxL7-hHOOaAMosYvnGhU6XCJAIgxT_XkzRJRQ19yP1t4UKF5fvkD76XMPF6Qng7LSnzFGEjyBF5LVQG5OmJAB3Nqweq8J-ac-GD0N-3WKFn9ofZazUNdqbUe7cDzuRaagsY0UipeF8yNh7jVLZdgMOxn5UaRTQqTjfZ43Y9bJfxTZJFDxJT3vJ-0q3_LhHBze63dwoqupZTMttcVpdmU695V5Tm_JsQfuTBtfyOANIByZ_fLd-43FPvvMBPDlKKVh5mBgF1xz8L1-MO2nETJbnDNg8xcw5nEY4Idc7Q6EXOXfkTpLcBTHKcpHgbiruQGuRUNLJe0g_kOeQr7OR-lokrI_aoTDqNBQjnZrms7WZ2RGI0WWexdLeF_280iVN5B735OnhfRVuiVDPJ2qtt3M_DqiI0yrlatNzO9FkR2hV8eK5JP6WbvF9LllkXiPMwmifvYw6GsoJAtbT6Ah6zNsi0aY7Cm02cizTjNo3RnuQVi_=w752-h830-no?authuser=0",
                            LocationId = 1,
                            Name = "Pablo Picasso"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed posuere nisl tristique purus volutpat sagittis. Cras suscipit placerat varius. Aenean fermentum metus ut iaculis ultrices. Nullam semper sollicitudin faucibus. Nam vel bibendum justo. Cras mollis ex odio, at iaculis nunc iaculis eget. Nullam volutpat bibendum tincidunt. Vestibulum aliquam risus quis hendrerit tempor. Suspendisse ut ex in arcu convallis gravida. In venenatis feugiat posuere. Duis ac aliquam odio. Vestibulum sit amet volutpat erat, in elementum tortor. Phasellus malesuada ipsum id velit viverra elementum. Nulla eleifend sem sed nunc facilisis venenatis. Cras pellentesque quam sit amet urna convallis scelerisque.",
                            Email = "panek-jerzy@xxx.com",
                            ImgSrc = "https://lh3.googleusercontent.com/ccL6CWavQz5f-p7P2n2Jxv5EUiGvKxDFoU5pAlqhYJQ-yG8gv1sFq3zzECP-_QOBDuEgLrlfKA6ZFs1ezDy7oWDHv7gt8cXkGBOJDJJ5gzNvvU4LqmLHXPFxzEPTYmKo6yv8vaJAJdukr7CQ7MGkxZ0QFcVntEKoyz8rzQlqd_Smh6sUFgwFolSc2_Sz3Kr5wShkezcVupRQxo40FZjWixFIs3-Jk5-GsARy_nhVqmCYnws1CMdD1wEUzztE-kI2LDjxRuKAfo0WorzxUFZXyrnGKklmbawpzgchwTlaD2UPKO04dzSe4kt8iP0nWCNLgdFEEvm4g4RfcO8iWhbE-liTek7aBA1JHXamElTFNL5X20BXkFHRQjH9w55AdIGJ4r0bsSLU-isEeQoyLgn4Oz4V6_cpJjfnLAerBbjxDotjiwvhzrUAhrkha1vqdWJK94vekotQDFlWOIGLqliPvB7vPIcZT065jNi1oxZ_mXnxqr1yjtsz438peZelAA7dlAe7YVWUHYvqIR6Z6kPTMfxL5r1lBATslsAgVGfB3oyvVC0ZUv659yWF61mY8CPzJa3PKOtowIGPJwJAGVQQR_G_K5iz3PFbhRlgL-1z6vT2AEoN_YHy8L2FxKGOqyxWour4xau4UL21wvBY1NBEX4iGAfBKTytSacDZng2NH5Y3vtQAwA_-Ii4X7auzfIPrl7fRE5f8-ako2S6qieT87JmIBJmTDGMFzPwJJR-_DBYsXSHSiY2eqkPLhquiNg2QyDz5lB3tuqdJfgBPUjekssjY9pasFPBvB6TP=w690-h388-no?authuser=0",
                            LocationId = 2,
                            Name = "Jerzy Panek"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed posuere nisl tristique purus volutpat sagittis. Cras suscipit placerat varius. Aenean fermentum metus ut iaculis ultrices. Nullam semper sollicitudin faucibus. Nam vel bibendum justo. Cras mollis ex odio, at iaculis nunc iaculis eget. Nullam volutpat bibendum tincidunt. Vestibulum aliquam risus quis hendrerit tempor. Suspendisse ut ex in arcu convallis gravida. In venenatis feugiat posuere. Duis ac aliquam odio. Vestibulum sit amet volutpat erat, in elementum tortor. Phasellus malesuada ipsum id velit viverra elementum. Nulla eleifend sem sed nunc facilisis venenatis. Cras pellentesque quam sit amet urna convallis scelerisque.",
                            Email = "beksinski-zdzislaw@xxx.com",
                            ImgSrc = "https://lh3.googleusercontent.com/jJlkVuK17yo7d276rsJXENi73l1TGhPyfJaGbf1Ndk83kbI5gZbMfPIlnnmR1fjVTmU5MEJQ0smqg1LJt5VLFPH3NVLieeQkpjrtdIKmPKNYzyucf24puAzAVIQZfbNzEk1yvoBV7L3VDWhsxXb65lxYa449RT3rkghD8d54OJARr4kYLeGjQu2TvLj85-BCq_LR8hn3Uk1v_gHNWFj_PgGfiG6Jq3IapONqroJFO4ng-XSOLj4EEIMzaan3vNaHhn8hBLbc8Q6Tkkvx6Olt9FJNbVebahI5bU7Z9SP-DznGUiFYV9Gim4TO4HCf2pyPVzxIQ7spEtGl96vanwL_RaRul3lvRJHsT68zv_ou2H8bLZGZPifdXRNBnfR7BmLJOnV8vL9Hu-efx9VMLTl05O3mekQ3eNfeOz-WDAtMDSinYnLkjmq5SBjesXFMj6PZFg41qGsfX6Bfi2gbwuMJBVXDkQsIyZoU7egfRJw96ziBrp9_MED0m1PD2eqEqbEoTXMFLnmnaJiV8lKfDKp9RjNP6X1A-htynZEutJDHnLH9EZUbD5z1mpx6we5NxLISoqNsyOA7fVgLWH11s39DK3Ru0fLsJOs_Lerkb0qB257HYDzcmDa7zzXmfWQy5485U1K2quLFdiPMtKP1-q_fPqDYbkhRtMuEjRPa-b7TuZhRP_ebJdmoMBRoFrRYvFzeiOhkfCJAbDUl5HRPKEpcV0npnZwI8emiFj3xAlvSU-hmi1vgZ63UDIF9_mKNF0pEx1RrS7Qs92b07LzvsirzWtvw3KB1VSKTSBJP=w819-h649-no?authuser=0",
                            LocationId = 3,
                            Name = "Zdzisław Beksiński"
                        });
                });

            modelBuilder.Entity("Domain.Artwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Artworks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            Description = "Pablo picasso painting",
                            ImgSource = "https://lh3.googleusercontent.com/BWlHe0S5T4abGwk2emrtxCDIBjHYOfG5kPhN6QsnaTf-pCxyT7FYTOPJUPuxKpqLg4hnv4-YuqO6XTUH-G97Jrmpdpr0yeLMAO6HuE2sTJCLDn2jLDgj0SdGMh4UF7paZu3m1E8xh1WLVvxNw0y1O3YC9QE713Zi-_ntaD-v6xqWTh_XArAC6Q7hvZPCxm_L7aAmABlGWVpNn8s2n_bwZgPQvlUW4K_gHEpiopRN-AlT1K_PImkte4elFCJ6AJMqXB3KIQSCJHiw7g-Dn_ILGY3KpRJhoUU_zZKqFq5AUDtp07zbcNpCFyufwgA3l_f4grFP1rIGsUbaeBZab7tdagg0BH-RrHZGrmXEzIneYtBgN0TMxrCeHfwgtxakXEPUwmbX3fz3rYC2ZgolNAjJjYSekV5ElYcPBEWXTh8umOXNUqABr0iak91yoO2cL-Bx2WcdWYz1x4TCJVT3QH9u9zD4p3JaDFo65tyWIApvIVV5IKjuf5iOR2rc3IrY0gGKvb8TFsQn57_xIBCg8ClDtm2UpFMkEyWJDVdwUN46JgVkkjbSKODC7VnGhlJ47zM54YbzdIzVSoMmKu6xjXcAubpCe6FxHIkOU1jsKMuBzxNcmpkVigho2ITJToEAvdtMnqo58EJxc9LhIr_q_5Yi3rNV96_-Shs4I7nSrE9AHv-zQIAXkPNz5cJXGG6xCvJ6p5DDbPglArPO6IYN6p2ObRCpwJv48KFyY8gCrLbs9-1wwSZ4UfpBqaNiV65U0ZvKuK9ZAdmxqiw9RwJPY9DcFWD8Sp7eUcJ8nsFm=w541-h717-no?authuser=0",
                            Name = "Blue nude"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            Description = "Pablo picasso painting",
                            ImgSource = "https://lh3.googleusercontent.com/OF5oCENl8mbGTyw10GgWxvbYDaeiIbam9Ci9SsRmc33U9jD2OExfw_amdv-uHZw6__tkKhKqh9z-Evn4mQx1NtZxSyXMYrw_0z1Flbf3TTGThKh9QTkC4wdvvWo3vWX0vOGzV6fSfpEIh_73TNShBDpDaiyQ1WyKq4e_phGX2PQT6le6IyOkycD7aa9rVVbvw0VRK6OsihNVoJgWjti6M3AA_RiMca94tVu1XjFuOBW-GPi8wcDaPqUT447Q3qJVb7HgqQI1eDESRxVILm_rTfiSKy_beQyMSNcWwG6f1MYT-Z0Co5kynZN6DDKDSmpls0nXlLjKJQc0fGdDngI6lCXTEbdoR8FakLMLNIzEjr7Ypy0OBd50V-2nvroidl35xUCva-7cHIGZ1SXc46jS0LMIxM5jPT-5-9oDkVz_hvhccTJMRP21E4R32XsnWovp-k7o9_-8GbIIA6yK859ZDA-xTzpEVRO6HcQ34B7iach1L1_s-16MBjwdod9JuDWPZVr17hI9wzvWG3eLgcKFmDtrWS2P7rQQFE6oH-m3CGQ8dZXsycaTBri42lWcDa3-bMHV44s5sjyEKwz5vPVC1bKTsOGwom5uijeygBWJpMIACybC1f7wPzQ-ME1tjN15AMoxj4CL6lKLMGEAYWkN9-vexWzrrt1bbmeTDxI2bqAQwI86RgL7DYfJ4Dw2RV40a81p-ozy8cumRC0cGuDBkqDb4AmX1uLenaU3k3TIPC62-UTm4-MrKbBttkyItoD681g7ekQcpeuJ1MCGlmXnrlAET1hx2O2UePub=w650-h805-no?authuser=0",
                            Name = "Girl before a mirror"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            Description = "Pablo picasso painting",
                            ImgSource = "https://lh3.googleusercontent.com/CTiBgzayuRBCJlSaCIY6tYjYWNM4JmeY3v4kQ4hHqvHtiXqmSbPQd8fZkRQEcelA8YzcHaw80-WsRWERrbgd5j-o9dE05O3NYs_XFPi9-dvzTfYGv26qhk6Iv3uY7JzrB_-eS-_rEcRMsinPPVAMn7mEx_E_0pV5vGgiXCjV-E-lOCFgxQyD1cz7N16yWO9vflZ16ioa-0oYO_Ej-TmkFn4m7K8Dg-_n1mBYl-WTM8sLPOGW4nqNewMtfrJ3fuZMgsQPPWlgBg-aI2VpZqRLcWHtTHSMMPpgywv_fvmsbxz0Ze93EmjBWQAL_i4XmNG07Ns-_Zu9URzjO64SLIbCu922OdD0w7S1TI7VEJ7FEy7evTHZPp7pOpndFWokfOAdBVz8NTNLAQ5ajqre1YaBO-CzptLK0VtS6yp-FDNHnomFFC64dFGl_39a2MqFJKvj23eq4_5lc6UcSR1YJbTb9PedGinrH037QgmGV0NVG3sz9Mcj6VGiXILqUkNV6XO2RpT_DvB9C-BRjFhoBmviFbPFZ_ooZ5Syrm8yIDJIlmVemWTxqhKHSUKTGO2jjIIP0q_TP6GLqvYwB7Aqx5YH38EObfyPCyq6tpy1eRY8S0kiVrYDT3WnagHK8okSDhHqQaY57wdFEW2gqt7trH1QT4a-20oPyQ-biXU5Fgs1kO85hV5qTiTJ_CfQajWKG8XVc1UxTiNI9kqmFyUWvvMoM8cJD7sgnamS7GRMLeWSyO_8i-suVVpCcqWAfXt-IaBv5lGaG68VITdl6qqsKUHwPIdON0Qm0dwRD0fa=w900-h707-no?authuser=0",
                            Name = "Bullfight III"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 1,
                            Description = "Pablo picasso painting",
                            ImgSource = "https://lh3.googleusercontent.com/fYN_MLVZ3IO-yyfHsWRk7rtIh9zFYO4_GmHESLqY8-u0WIGbQXTHxKjDwTq4EXmN0q-xsfuTAlfX5Wr7xYkBUUc50zLOYO6dJdvJHlED7SU255bKeqZwvHthvmR-wWg3cU5J02j_jTqrkIdyKOtO-wCzCAKNHtiyLUrbhPJSzQalm7-ZI84kxHJwj1Ac5U0mozfJQ7-852lpAEhDR2VEriBDXzA6lzQK2yFpV-KnQ9gHXPOPgDLJwtezsREArOX_F4XLgjR0qol9biC6jzYldXpqFWbQ0GiGB4ohjsf8Qrujuzd1yDygl2l5dg-a6lqDdBWRVDZBTipnpHZq3Ig2ufjJrFm1_9-ksL_dZg46a0Jg85GQphLQBV_p3PWOuq6CzYU1yyxK8p6SsQpZ9TA8JII-XcF9e2V5NuykcEAuUgnDV6qHhVXkdL2JiE0K0QLDfLFbS6Y-QqFwjawD-eXboKwgJlNbzgG__DzAcRc3wSdoWzJ8c13YLp56ejoiWiZUrZAKjBlh1oNcbvaNHpUkM6oHZpSKcsyrOVwHaWt19ANUPnNbHbshM_UWg7WslvHT4px7LzXB322JzhL8ujp7U6eUIDrZQdLyXZqNhjuwgLqxsw6iOdEBxzAwG66qVUBC4-N1y3ovB0RW7ku5PUFsBlTFhh3Bedptsp6EMj2nOceW1-P2iUmknbSFzwH74YaXzaaglLxncI73hDY3d-kM-8AargfLW3uDNzk_kuyIDfWSM-BDYp08s1UyvNQZytTMPjkGUALn1uAt0bDcGEJ85UawWz8O029TqXeG=w600-h464-no?authuser=0",
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 2,
                            Description = "Grafika Jerzy Panek",
                            ImgSource = "https://lh3.googleusercontent.com/yCrplNvAr6Vueo1Fu7Bhc4lFUkiJcEQl-9PC46luUDGe-Ke0nX3j9pO7Uyum3DaAFhoWwVMuAD0VEtZIZIhesBA-SgQx1pzgF1CDAxB-XLoA7ZdlNEH0VyWGML7BDmUdVYGcX20fP_L_qiHFI1uVdsAlzFSrMyd8Wh68-rycaAdJF0ItxiaU8-CLFPO25UBUbFFRc60DRseUKxSP3funsemF-QLKP3ytKdxqb_S1xOLb8gYy7BVZGQWmmewHDIISDIVuK9ggg_z1ybl0JYecLkwuZlIJmFpyD43BGF8YmpVAnVYDQLpNZqoj-XkqSOefmftxLGTirfo3xtj9rUgS3aBU0272_tM2TjvnNhFe35NInufZnngH7XsEyrBfOf88_3mL0lP6xQ6xKecoIE9k_1DFxcynWRXxOtviDkhgbMYjxhxROdtMysaL3VsTcbnBUa95p5cO-Ez1xDfW-KRK8_Ap-Doooq6g615hp2u4GPZ-yNywWgzCQVReksN8rLd4k5VxajH63DE02Z52B34hCKQOiJIDa3UQrAuqzKrGGIEpHstWYHFrOzQ8pNEaHZhgWp0Jn9gnKtwvGAwc8htnegVVGlrSKzl1v_h5sEkSgi0xuZtbHWdKUC_5N9We_0eZrY3vnvv3rPKqiMUGlObEOUJoqtnPN5LM9qNwHPJxDQ2QXu6Jd4eQzzZmmfrDnFQRm8S9ck0asEt0JJqGxGRgLAY2xy7ksYctDLt-4AE8-LEzIsA8aBG41Wa-VXkL9ExcE_stzzFoYWieX7lj481naG5VEEICKTCe2i4C=w580-h802-no?authuser=0",
                            Name = "Pasterka"
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 2,
                            Description = "Grafika Jerzy Panek",
                            ImgSource = "https://lh3.googleusercontent.com/0YAl8IEdWAb5RVU4RClLpRKqHcTkpXjgf0IhOlqPZ69TWrBjQVv7JaGGUafrXq2ztUjLhGVsNbuelXT1ibp0ntits4_bVzDRu5Yn19dBvs0ItKYxPHC8VlgHD9Co2Ck7pxkZW9NXDy1tnYsMuOupGQ4Vucg8Gsu0DkXfzHP_i0TOOMjPymoQ9gzLT2nyn5sjhYKz0jFUEau-JlhbzbPgwwbFsYT9M9YOJXqkV35XyeLbRM2wiNNvfzmAy98ppDyP7guZ5poiTtNLrXak6VWG21RC9N48X3uiH66sIaz2LAXOFZatYgF73qXfXryAZYCCpVgrPkwK2CKeYQqj6NxZINkuVIEvpqgjnrmr7aOv8db9XTjwNX_rtnf_0j2o_izH9CdnFewwhiq-tCdU1aXNMEgpX-DurREXzUpU7VDFDkYw-AdXGb8op2updSXuy8rMCECkP-3dQjshfSZAUIZpu85_UzdYy64rlVHVXVCGtBIF6LZQf7JnkhTr8q3U90mj8JMUui8XYJasbk2Bz8CImCnmWCVTLqsmKc0tedWUjg-Vpkou_n8wJQbCH3FYoXATaBq-qicG3nkXeKbUmqZIWf7a8zRY0jbgcg78xtao0wwe7rfOTvaT4CjUkVCRkZ7O7x6_-BluqmjRKbFmQl8sB573vXIUXDrP169f7JN61Axqh7pfvAGdnILL4TN7ggQknWptlDncDzaEuEWGbbGVHBHm0P7v9TZCZ5B_vp1unqWehI3DGFESIv2SfWT5uJ4GW9I0rIpXaN7EeeAH9r1Sw5A4ihykIODjXEkQ=w860-h722-no?authuser=0",
                            Name = "Biały Koń I"
                        });
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dziedzina sztuki wizualnej.",
                            Name = "Malarstwo"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dziedzina sztuki wizualnej.",
                            Name = "Grafika"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dziedzina sztuki wizualnej.",
                            Name = "Rzeźba"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Dziedzina sztuki wizualnej.",
                            Name = "Rysunek"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Dziedzina sztuki wizualnej.",
                            Name = "Inne"
                        });
                });

            modelBuilder.Entity("Domain.CategoryArtist", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoriesArtists");
                });

            modelBuilder.Entity("Domain.CategoryArtwork", b =>
                {
                    b.Property<int>("ArtworkId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ArtworkId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoriesArtwork");

                    b.HasData(
                        new
                        {
                            ArtworkId = 1,
                            CategoryId = 1,
                            Id = 1
                        },
                        new
                        {
                            ArtworkId = 2,
                            CategoryId = 1,
                            Id = 2
                        },
                        new
                        {
                            ArtworkId = 3,
                            CategoryId = 2,
                            Id = 3
                        },
                        new
                        {
                            ArtworkId = 4,
                            CategoryId = 2,
                            Id = 4
                        },
                        new
                        {
                            ArtworkId = 5,
                            CategoryId = 2,
                            Id = 5
                        },
                        new
                        {
                            ArtworkId = 6,
                            CategoryId = 2,
                            Id = 6
                        });
                });

            modelBuilder.Entity("Domain.Hashtag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtworkId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Hashtag");
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Malaga",
                            Country = "Hiszpania"
                        },
                        new
                        {
                            Id = 2,
                            City = "Kraków",
                            Country = "Polska"
                        },
                        new
                        {
                            Id = 3,
                            City = "Warszawa",
                            Country = "Polska"
                        },
                        new
                        {
                            Id = 4,
                            City = "Wrocław",
                            Country = "Polska"
                        },
                        new
                        {
                            Id = 5,
                            City = "Poznań",
                            Country = "Polska"
                        },
                        new
                        {
                            Id = 6,
                            City = "Łódź",
                            Country = "Polska"
                        },
                        new
                        {
                            Id = 7,
                            City = "Gdańsk",
                            Country = "Polska"
                        });
                });

            modelBuilder.Entity("Domain.Milestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResumeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.ToTable("Milestone");
                });

            modelBuilder.Entity("Domain.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Resume");
                });

            modelBuilder.Entity("Domain.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("SocialMedia");
                });

            modelBuilder.Entity("Domain.Technique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Techniques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Technika malarska",
                            Name = "Olej"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Technika malarska",
                            Name = "Akwarela"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Technika malarska",
                            Name = "Akryl"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Technika malarska",
                            Name = "Tempera"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Technika malarska",
                            Name = "Pastele"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Technika grafiki warsztatowej",
                            Name = "Akwatinta"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Technika grafiki warsztatowej",
                            Name = "Akwaforta"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Technika grafiki warsztatowej",
                            Name = "Sucha igła"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "Technika grafiki warsztatowej",
                            Name = "Drzeworyt"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "Technika grafiki warsztatowej",
                            Name = "Miedzioryt"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "Technika grafiki warsztatowej",
                            Name = "Linoryt"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "Technika grafiki warsztatowej",
                            Name = "Litografia"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Description = "Technika rzeźbiarska",
                            Name = "Drewno"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            Description = "Technika rzeźbiarska",
                            Name = "Kamień"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            Description = "Technika rzeźbiarska",
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            Description = "Technika rzeźbiarska",
                            Name = "Inne"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 4,
                            Description = "Technika rysunku",
                            Name = "Węgiel"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            Description = "Technika rysunku",
                            Name = "Ołówek"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            Description = "Technika rysunku",
                            Name = "Kreda"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            Description = "Technika rysunku",
                            Name = "Tusz"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            Description = "Technika rysunku",
                            Name = "Inne"
                        });
                });

            modelBuilder.Entity("Domain.TechniqueArtwork", b =>
                {
                    b.Property<int>("ArtworkId")
                        .HasColumnType("int");

                    b.Property<int>("TechniqueId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ArtworkId", "TechniqueId");

                    b.HasIndex("TechniqueId");

                    b.ToTable("TechniquesArtwork");

                    b.HasData(
                        new
                        {
                            ArtworkId = 1,
                            TechniqueId = 1,
                            Id = 1
                        },
                        new
                        {
                            ArtworkId = 2,
                            TechniqueId = 1,
                            Id = 2
                        },
                        new
                        {
                            ArtworkId = 3,
                            TechniqueId = 20,
                            Id = 3
                        },
                        new
                        {
                            ArtworkId = 4,
                            TechniqueId = 20,
                            Id = 4
                        },
                        new
                        {
                            ArtworkId = 5,
                            TechniqueId = 9,
                            Id = 5
                        },
                        new
                        {
                            ArtworkId = 6,
                            TechniqueId = 9,
                            Id = 6
                        });
                });

            modelBuilder.Entity("Domain.Artist", b =>
                {
                    b.HasOne("Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Resume", "Resume")
                        .WithMany()
                        .HasForeignKey("ResumeId");

                    b.Navigation("Location");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("Domain.Artwork", b =>
                {
                    b.HasOne("Domain.Artist", "Artist")
                        .WithMany("Artworks")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Domain.CategoryArtist", b =>
                {
                    b.HasOne("Domain.Artist", "Artist")
                        .WithMany("CategoriesArtist")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Category", "Category")
                        .WithMany("CategoriesArtist")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.CategoryArtwork", b =>
                {
                    b.HasOne("Domain.Artwork", "Artwork")
                        .WithMany("CategoriesArtwork")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Category", "Category")
                        .WithMany("CategoriesArtwork")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Hashtag", b =>
                {
                    b.HasOne("Domain.Artwork", null)
                        .WithMany("Hashtags")
                        .HasForeignKey("ArtworkId");
                });

            modelBuilder.Entity("Domain.Milestone", b =>
                {
                    b.HasOne("Domain.Resume", null)
                        .WithMany("Milestones")
                        .HasForeignKey("ResumeId");
                });

            modelBuilder.Entity("Domain.SocialMedia", b =>
                {
                    b.HasOne("Domain.Artist", null)
                        .WithMany("Media")
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("Domain.Technique", b =>
                {
                    b.HasOne("Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.TechniqueArtwork", b =>
                {
                    b.HasOne("Domain.Artwork", "Artwork")
                        .WithMany("TechniquesArtwork")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Technique", "Technique")
                        .WithMany("TechniquesArtwork")
                        .HasForeignKey("TechniqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");

                    b.Navigation("Technique");
                });

            modelBuilder.Entity("Domain.Artist", b =>
                {
                    b.Navigation("Artworks");

                    b.Navigation("CategoriesArtist");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Domain.Artwork", b =>
                {
                    b.Navigation("CategoriesArtwork");

                    b.Navigation("Hashtags");

                    b.Navigation("TechniquesArtwork");
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Navigation("CategoriesArtist");

                    b.Navigation("CategoriesArtwork");
                });

            modelBuilder.Entity("Domain.Resume", b =>
                {
                    b.Navigation("Milestones");
                });

            modelBuilder.Entity("Domain.Technique", b =>
                {
                    b.Navigation("TechniquesArtwork");
                });
#pragma warning restore 612, 618
        }
    }
}
